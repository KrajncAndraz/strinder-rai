{"ast":null,"code":"var _jsxFileName = \"C:\\\\MY BACKUPABLE STUFF\\\\School\\\\FERI\\\\2. Letnik\\\\Razvoj Aplikacij za Internet\\\\strinder-rai\\\\frontend\\\\src\\\\components\\\\ChatMessages.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport { UserContext } from \"../userContext\";\nimport '../styles/Messages.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001'); // Poveži se s strežnikom\n\nfunction ChatMessages() {\n  _s();\n  const {\n    chatId\n  } = useParams(); // Pridobi ID chatloga iz URL-ja\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [newMessage, setNewMessage] = useState('');\n  const [error, setError] = useState('');\n  const messagesEndRef = useRef(null); // Ref za auto-scroll\n\n  const {\n    user\n  } = useContext(UserContext);\n  useEffect(() => {\n    // Pridruži se chatu\n    socket.emit('joinChat', chatId);\n\n    // Poslušaj nova sporočila\n    socket.on('receiveMessage', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n\n    // Počisti poslušalce ob odhodu iz komponente\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, [chatId]);\n  useEffect(() => {\n    async function fetchMessages() {\n      try {\n        const res = await fetch(`http://localhost:3001/chat/messages/${chatId}`, {\n          method: 'GET',\n          credentials: 'include'\n        });\n        const data = await res.json();\n        console.log(data); // Preveri, kaj vrača API\n        setMessages(data);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching messages:', err);\n        setLoading(false);\n      }\n    }\n    fetchMessages();\n  }, [chatId]);\n  useEffect(() => {\n    // Auto-scroll na zadnje sporočilo\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n  async function handleSendMessage(e) {\n    e.preventDefault();\n    setError('');\n    const messageData = {\n      content: newMessage\n    };\n    try {\n      // Pošlji sporočilo na backend API\n      const res = await fetch(`http://localhost:3001/chat/messages/${chatId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(messageData)\n      });\n      if (!res.ok) {\n        const errorData = await res.json();\n        setError(errorData.error || 'Error sending message.');\n        return;\n      }\n      const savedMessage = await res.json();\n\n      // Pošlji sporočilo prek Socket.IO, da ga prejmejo drugi uporabniki\n      socket.emit('sendMessage', savedMessage);\n\n      // Počisti vnosno polje\n      setNewMessage('');\n    } catch (err) {\n      console.error('Error sending message:', err);\n      setError('Error sending message.');\n    }\n  }\n  if (loading || !user) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sporo\\u010Dila\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        ClassName: \"messages\",\n        children: [messages.map((message, index) => {\n          var _message$sentBy, _message$sentBy2;\n          var isOwner = ((_message$sentBy = message.sentBy) === null || _message$sentBy === void 0 ? void 0 : _message$sentBy.username) === (user === null || user === void 0 ? void 0 : user.username);\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `${isOwner ? 'own-message' : 'message'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [((_message$sentBy2 = message.sentBy) === null || _message$sentBy2 === void 0 ? void 0 : _message$sentBy2.username) || 'Unknown user', \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 37\n              }, this), \" \", message.content]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"time\",\n              children: [\"Sent at: \", new Date(message.sentAt).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      class: \"message-input\",\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        placeholder: \"Enter message\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        required: true,\n        onInput: e => {\n          e.target.style.height = 'auto';\n          e.target.style.height = e.target.scrollHeight + 'px';\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatMessages, \"mq+jY+tk0kT/mCE182znjWqIZKc=\", false, function () {\n  return [useParams];\n});\n_c = ChatMessages;\nexport default ChatMessages;\nvar _c;\n$RefreshReg$(_c, \"ChatMessages\");","map":{"version":3,"names":["useState","useEffect","useRef","useContext","useParams","io","UserContext","jsxDEV","_jsxDEV","socket","ChatMessages","_s","chatId","messages","setMessages","loading","setLoading","newMessage","setNewMessage","error","setError","messagesEndRef","user","emit","on","message","prevMessages","off","fetchMessages","res","fetch","method","credentials","data","json","console","log","err","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","messageData","content","headers","body","JSON","stringify","ok","errorData","savedMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","ClassName","map","index","_message$sentBy","_message$sentBy2","isOwner","sentBy","username","className","id","Date","sentAt","toLocaleString","ref","class","onSubmit","type","placeholder","value","onChange","target","required","onInput","style","height","scrollHeight","color","_c","$RefreshReg$"],"sources":["C:/MY BACKUPABLE STUFF/School/FERI/2. Letnik/Razvoj Aplikacij za Internet/strinder-rai/frontend/src/components/ChatMessages.js"],"sourcesContent":["import { useState, useEffect, useRef, useContext } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\nimport { UserContext } from \"../userContext\";\r\nimport '../styles/Messages.css';\r\n\r\nconst socket = io('http://localhost:3001'); // Poveži se s strežnikom\r\n\r\nfunction ChatMessages() {\r\n    const { chatId } = useParams(); // Pridobi ID chatloga iz URL-ja\r\n    const [messages, setMessages] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const [error, setError] = useState('');\r\n    const messagesEndRef = useRef(null); // Ref za auto-scroll\r\n\r\n    const { user } = useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        // Pridruži se chatu\r\n        socket.emit('joinChat', chatId);\r\n\r\n        // Poslušaj nova sporočila\r\n        socket.on('receiveMessage', (message) => {\r\n            setMessages((prevMessages) => [...prevMessages, message]);\r\n        });\r\n\r\n        // Počisti poslušalce ob odhodu iz komponente\r\n        return () => {\r\n            socket.off('receiveMessage');\r\n        };\r\n    }, [chatId]);\r\n\r\n    useEffect(() => {\r\n        async function fetchMessages() {\r\n            try {\r\n                const res = await fetch(`http://localhost:3001/chat/messages/${chatId}`, {\r\n                    method: 'GET',\r\n                    credentials: 'include',\r\n                });\r\n                const data = await res.json();\r\n                console.log(data); // Preveri, kaj vrača API\r\n                setMessages(data);\r\n                setLoading(false);\r\n            } catch (err) {\r\n                console.error('Error fetching messages:', err);\r\n                setLoading(false);\r\n            }\r\n        }\r\n\r\n        fetchMessages();\r\n    }, [chatId]);\r\n\r\n    useEffect(() => {\r\n        // Auto-scroll na zadnje sporočilo\r\n        if (messagesEndRef.current) {\r\n            messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        }\r\n    }, [messages]);\r\n\r\n    async function handleSendMessage(e) {\r\n        e.preventDefault();\r\n        setError('');\r\n\r\n        const messageData = {\r\n            content: newMessage,\r\n        };\r\n\r\n        try {\r\n            // Pošlji sporočilo na backend API\r\n            const res = await fetch(`http://localhost:3001/chat/messages/${chatId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include',\r\n                body: JSON.stringify(messageData),\r\n            });\r\n\r\n            if (!res.ok) {\r\n                const errorData = await res.json();\r\n                setError(errorData.error || 'Error sending message.');\r\n                return;\r\n            }\r\n\r\n            const savedMessage = await res.json();\r\n\r\n            // Pošlji sporočilo prek Socket.IO, da ga prejmejo drugi uporabniki\r\n            socket.emit('sendMessage', savedMessage);\r\n\r\n            // Počisti vnosno polje\r\n            setNewMessage('');\r\n        } catch (err) {\r\n            console.error('Error sending message:', err);\r\n            setError('Error sending message.');\r\n        }\r\n    }\r\n\r\n    if (loading || !user) {\r\n        return <p>Loading...</p>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Sporočila</h2>\r\n            {/* Scrollable box za sporočila */}\r\n            <div>\r\n                <ul ClassName=\"messages\">\r\n                    {messages.map((message, index) => {\r\n                        var isOwner = message.sentBy?.username === user?.username;\r\n                        return (\r\n                            <li key={index} className={`${isOwner ? 'own-message' : 'message'}`}>\r\n                                <p>\r\n                                    <strong>{message.sentBy?.username || 'Unknown user'}:</strong> {message.content}\r\n                                </p>\r\n                                <p id=\"time\">\r\n                                    Sent at: {new Date(message.sentAt).toLocaleString()}\r\n                                </p>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                    <div ref={messagesEndRef} /> {/* Ref za auto-scroll */}\r\n                </ul>\r\n            </div>\r\n\r\n            <form class=\"message-input\" onSubmit={handleSendMessage}>\r\n                <textarea\r\n                    type=\"text\"\r\n                    placeholder=\"Enter message\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    required\r\n                    onInput={e => {\r\n                        e.target.style.height = 'auto';\r\n                        e.target.style.height = e.target.scrollHeight + 'px';\r\n                    }}\r\n                />\r\n                <button type=\"submit\">Send</button>\r\n            </form>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatMessages;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}