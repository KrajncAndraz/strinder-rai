{"ast":null,"code":"var _jsxFileName = \"C:\\\\MY BACKUPABLE STUFF\\\\School\\\\FERI\\\\2. Letnik\\\\Razvoj Aplikacij za Internet\\\\strinder-rai\\\\frontend\\\\src\\\\components\\\\ChatMessages.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport '../styles/Messages.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001'); // Poveži se s strežnikom\n\nfunction ChatMessages() {\n  _s();\n  const {\n    chatId\n  } = useParams(); // Pridobi ID chatloga iz URL-ja\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [newMessage, setNewMessage] = useState('');\n  const [error, setError] = useState('');\n  const messagesEndRef = useRef(null); // Ref za auto-scroll\n\n  useEffect(() => {\n    // Pridruži se chatu\n    socket.emit('joinChat', chatId);\n\n    // Poslušaj nova sporočila\n    socket.on('receiveMessage', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n\n    // Počisti poslušalce ob odhodu iz komponente\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, [chatId]);\n  useEffect(() => {\n    async function fetchMessages() {\n      try {\n        const res = await fetch(`http://localhost:3001/chat/messages/${chatId}`, {\n          method: 'GET',\n          credentials: 'include'\n        });\n        const data = await res.json();\n        console.log(data); // Preveri, kaj vrača API\n        setMessages(data);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching messages:', err);\n        setLoading(false);\n      }\n    }\n    fetchMessages();\n  }, [chatId]);\n  useEffect(() => {\n    // Auto-scroll na zadnje sporočilo\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n  useEffect(() => {\n    async function fetchCurrentUser() {\n      try {\n        const res = await fetch('http://localhost:3001/api/currentUser', {\n          credentials: 'include'\n        });\n        const data = await res.json();\n        setCurrentUser(data); // data should have .username or .id\n      } catch (err) {\n        setCurrentUser(null);\n      }\n    }\n    fetchCurrentUser();\n  }, []);\n  async function handleSendMessage(e) {\n    e.preventDefault();\n    setError('');\n    const messageData = {\n      content: newMessage\n    };\n    try {\n      // Pošlji sporočilo na backend API\n      const res = await fetch(`http://localhost:3001/chat/messages/${chatId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(messageData)\n      });\n      if (!res.ok) {\n        const errorData = await res.json();\n        setError(errorData.error || 'Error sending message.');\n        return;\n      }\n      const savedMessage = await res.json();\n\n      // Pošlji sporočilo prek Socket.IO, da ga prejmejo drugi uporabniki\n      socket.emit('sendMessage', savedMessage);\n\n      // Počisti vnosno polje\n      setNewMessage('');\n    } catch (err) {\n      console.error('Error sending message:', err);\n      setError('Error sending message.');\n    }\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sporo\\u010Dila\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [messages.map((message, index) => {\n          var _message$sentBy;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            class: \"message\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Sent at: \", new Date(message.sentAt).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [((_message$sentBy = message.sentBy) === null || _message$sentBy === void 0 ? void 0 : _message$sentBy.username) || 'Unknown user', \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), \" \", message.content]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      class: \"fullW\",\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        placeholder: \"Enter message\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        required: true,\n        onInput: e => {\n          e.target.style.height = 'auto';\n          e.target.style.height = e.target.scrollHeight + 'px';\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatMessages, \"eg5mCye8gmsx5rUhWC2rR2sOeio=\", false, function () {\n  return [useParams];\n});\n_c = ChatMessages;\nexport default ChatMessages;\nvar _c;\n$RefreshReg$(_c, \"ChatMessages\");","map":{"version":3,"names":["useState","useEffect","useRef","useParams","io","jsxDEV","_jsxDEV","socket","ChatMessages","_s","chatId","messages","setMessages","loading","setLoading","newMessage","setNewMessage","error","setError","messagesEndRef","emit","on","message","prevMessages","off","fetchMessages","res","fetch","method","credentials","data","json","console","log","err","current","scrollIntoView","behavior","fetchCurrentUser","setCurrentUser","handleSendMessage","e","preventDefault","messageData","content","headers","body","JSON","stringify","ok","errorData","savedMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","_message$sentBy","class","Date","sentAt","toLocaleString","sentBy","username","ref","onSubmit","type","placeholder","value","onChange","target","required","onInput","style","height","scrollHeight","color","_c","$RefreshReg$"],"sources":["C:/MY BACKUPABLE STUFF/School/FERI/2. Letnik/Razvoj Aplikacij za Internet/strinder-rai/frontend/src/components/ChatMessages.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\nimport '../styles/Messages.css';\r\n\r\nconst socket = io('http://localhost:3001'); // Poveži se s strežnikom\r\n\r\nfunction ChatMessages() {\r\n    const { chatId } = useParams(); // Pridobi ID chatloga iz URL-ja\r\n    const [messages, setMessages] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const [error, setError] = useState('');\r\n    const messagesEndRef = useRef(null); // Ref za auto-scroll\r\n\r\n    useEffect(() => {\r\n        // Pridruži se chatu\r\n        socket.emit('joinChat', chatId);\r\n\r\n        // Poslušaj nova sporočila\r\n        socket.on('receiveMessage', (message) => {\r\n            setMessages((prevMessages) => [...prevMessages, message]);\r\n        });\r\n\r\n        // Počisti poslušalce ob odhodu iz komponente\r\n        return () => {\r\n            socket.off('receiveMessage');\r\n        };\r\n    }, [chatId]);\r\n\r\n    useEffect(() => {\r\n        async function fetchMessages() {\r\n            try {\r\n                const res = await fetch(`http://localhost:3001/chat/messages/${chatId}`, {\r\n                    method: 'GET',\r\n                    credentials: 'include',\r\n                });\r\n                const data = await res.json();\r\n                console.log(data); // Preveri, kaj vrača API\r\n                setMessages(data);\r\n                setLoading(false);\r\n            } catch (err) {\r\n                console.error('Error fetching messages:', err);\r\n                setLoading(false);\r\n            }\r\n        }\r\n\r\n        fetchMessages();\r\n    }, [chatId]);\r\n\r\n    useEffect(() => {\r\n        // Auto-scroll na zadnje sporočilo\r\n        if (messagesEndRef.current) {\r\n            messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n        }\r\n    }, [messages]);\r\n\r\n    useEffect(() => {\r\n        async function fetchCurrentUser() {\r\n            try {\r\n                const res = await fetch('http://localhost:3001/api/currentUser', {\r\n                    credentials: 'include',\r\n                });\r\n                const data = await res.json();\r\n                setCurrentUser(data); // data should have .username or .id\r\n            } catch (err) {\r\n                setCurrentUser(null);\r\n            }\r\n        }\r\n        fetchCurrentUser();\r\n    }, []);\r\n\r\n    async function handleSendMessage(e) {\r\n        e.preventDefault();\r\n        setError('');\r\n\r\n        const messageData = {\r\n            content: newMessage,\r\n        };\r\n\r\n        try {\r\n            // Pošlji sporočilo na backend API\r\n            const res = await fetch(`http://localhost:3001/chat/messages/${chatId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include',\r\n                body: JSON.stringify(messageData),\r\n            });\r\n\r\n            if (!res.ok) {\r\n                const errorData = await res.json();\r\n                setError(errorData.error || 'Error sending message.');\r\n                return;\r\n            }\r\n\r\n            const savedMessage = await res.json();\r\n\r\n            // Pošlji sporočilo prek Socket.IO, da ga prejmejo drugi uporabniki\r\n            socket.emit('sendMessage', savedMessage);\r\n\r\n            // Počisti vnosno polje\r\n            setNewMessage('');\r\n        } catch (err) {\r\n            console.error('Error sending message:', err);\r\n            setError('Error sending message.');\r\n        }\r\n    }\r\n\r\n    if (loading) {\r\n        return <p>Loading...</p>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Sporočila</h2>\r\n            {/* Scrollable box za sporočila */}\r\n            <div>\r\n                <ul>\r\n                    {messages.map((message, index) => (\r\n                        <li key={index} class=\"message\">\r\n                            <p>\r\n                                Sent at: {new Date(message.sentAt).toLocaleString()}\r\n                            </p>\r\n                            <p>\r\n                                <strong>{message.sentBy?.username || 'Unknown user'}:</strong> {message.content}\r\n                            </p>\r\n                        </li>\r\n                    ))}\r\n                    <div ref={messagesEndRef} /> {/* Ref za auto-scroll */}\r\n                </ul>\r\n            </div>\r\n\r\n            <form class=\"fullW\" onSubmit={handleSendMessage}>\r\n                <textarea\r\n                    type=\"text\"\r\n                    placeholder=\"Enter message\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    required\r\n                    onInput={e => {\r\n                        e.target.style.height = 'auto';\r\n                        e.target.style.height = e.target.scrollHeight + 'px';\r\n                    }}\r\n                />\r\n                <button type=\"submit\">Send</button>\r\n            </form>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatMessages;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}